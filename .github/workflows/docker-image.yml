name: Docker Image CI

on:
  push:
    branches: [ "master" ]

jobs:

  build_amd64:
    runs-on: ubuntu-latest
    
    steps:
    - name: submodule init
      uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0
    
    - name: Setup environment
      run: |
        echo "VERSION=$(sed -e s/gns3-server==//g requirements.txt)" >> $GITHUB_ENV
        echo "USER=${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_ENV
        echo "REPO=gns3-server" >> $GITHUB_ENV

    - name: set up Docker Buildx
      uses: docker/setup-buildx-action@3.10.0

    - name: Login to Docker hub
      uses: docker/login-action@3.4.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build amd64 image
      uses: docker/build-push-action@v6.18.0
      with:
        context: .
        file: ./Dockerfile
        push: true
        platforms: linux/amd64
        tags: |
          ${{ env.USER }}/${{ env.REPO }}:${{ env.VERSION }}-amd64

  build_arm64:
    runs-on: ubuntu-latest
    needs: build_amd64

    steps:
    - name: submodule init
      uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0

    - name: Setup environment
      run: |
        echo "VERSION=$(sed -e s/gns3-server==//g requirements.txt)" >> $GITHUB_ENV
        echo "USER=${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_ENV
        echo "REPO=gns3-server" >> $GITHUB_ENV

    - name: set up Docker Buildx
      uses: docker/setup-buildx-action@3.10.0

    - name: Login to Docker hub
      uses: docker/login-action@3.4.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build arm64 image
      uses: docker/build-push-action@v6.18.0
      with:
        context: .
        file: ./Dockerfile
        push: true
        platforms: linux/arm64
        tags: |
          ${{ env.USER }}/${{ env.REPO }}:${{ env.VERSION }}-arm64

  create_manifest:
    runs-on: ubuntu-latest
    needs: [build_amd64, build_arm64]
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@3.4.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Create and push manifest
      run: |
          VERSION=$(sed -e s/gns3-server==//g requirements.txt)
          USER=${{ secrets.DOCKER_USERNAME }}
          REPO=gns3-server

          docker manifest create $USER/$REPO:$VERSION \
            $USER/$REPO:${VERSION}-amd64 \
            $USER/$REPO:${VERSION}-arm64

          docker manifest push $USER/$REPO:$VERSION

          docker manifest create $USER/$REPO:latest \
            $USER/$REPO:${VERSION}-amd64 \
            $USER/$REPO:${VERSION}-arm64

          docker manifest push $USER/$REPO:latest
      
